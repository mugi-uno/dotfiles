export PATH=/usr/local/bin:$PATH

# 移動時のcdを省略
setopt auto_cd
# 一部ディレクトリはどこからでも移動可能にしとく
cdpath=(.. ~ ~/src)
# 重複を履歴に記録しない
setopt hist_ignore_all_dups
# typoチェック
setopt correct


# 履歴管理
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
setopt extended_history

# disabled 'cd ..' by enhancd
ENHANCD_DISABLE_DOT=1

# load plugin manager
source ~/.zgen/zgen.zsh

if ! zgen saved; then

  zgen load zsh-users/zsh-syntax-highlighting

  # 自動補完
  zgen load zsh-users/zsh-completions
  [ -d $HOME/.zsh/zsh-completions/src ] && fpath=($HOME/.zsh/zsh-completions/src $fpath)

  zgen load peco/peco
  #zgen load b4b4r07/enhancd

  # cd to git root directory
  zgen load mollifier/cd-gitroot

  # load oh-my-zsh
  zgen oh-my-zsh
  zgen oh-my-zsh plugins/git
  zgen oh-my-zsh themes/robbyrussell

  # generate the init script from plugins above
  zgen save
fi


# history search by peco
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(\history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

# move ghqroot
function peco-move-ghq-root() {
  local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
    zle clear-screen
  fi
}
zle -N peco-move-ghq-root
bindkey '^g' peco-move-ghq-root

# checkout by peco
function checkout-by-peco() {
  git branch --sort=-authordate | grep -v '*' | peco | xargs git checkout
}
zle -N checkout-by-peco
bindkey '^b' checkout-by-peco

function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
stty -ixon
bindkey '^p' pet-select

# for tmux alias
alias tmux="TERM=screen-256color-bce tmux"

# launch tmux
# if [ -z $TMUX ]; then
#   tmux
# fi


alias hosts="cat /etc/hosts"

# alias for git
alias gbmd="git branch --merged | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %"
alias gpeco="git branch | peco | xargs git checkout"
alias prc="hub pr list | peco | awk '{print substr(\$1, 2)}' | xargs -I{} hub pr checkout {}"
alias fixup="git log --oneline -n -30 | peco | awk '{print $1}' | xargs -I{} git commit --fixup {}"
alias autosquash="git log --oneline -n -30 | peco | awk '{print $1}' | xargs -I{} git rebase -i --autosquash {}"

# for Rails Alias
alias be="bundle exec"

# Disable open dual window by Sublime text
alias subl='subl -a'

# For anyenv (https://github.com/riywo/anyenv)
export PATH="$HOME/.anyenv/bin:$PATH"
eval "$(anyenv init -)"

export PATH="$HOME/.bin:$PATH"

if [ -f ~/.zshrc.additional ]; then
  source ~/.zshrc.additional
fi

alias ls="exa"
alias ll="exa -la --icons"
alias d="docker"
alias dc="docker-compose"
alias grbom='git rebase origin/master'
alias ryarn='rm -rf ./public/packs && yarn install && yarn watch'
alias c="crane"
alias ce="crane exec"
alias cr="crane run"
alias cs="crane status"
alias crspec="crane exec app bin/rspec"
alias crubocop="crane exec app rubocop"
alias lastdiff="git -P diff HEAD^ HEAD --name-only"

